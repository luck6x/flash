сложный уровень

условие:
найти количество четверок чисел, где не больше 2 четных чисел, минимум один палиндром и сумма четверки не больше наибольшего числа, делящегося на 11, и наименьшую сумму чисел четверки

ответ: 1810 -196299

f=open('17.txt')
def pal(x): #создаем доп. функцию, которая будет проверять является ли число палиндромом
    x=str(abs(x))
    if len(x) == 1:
        return False
    for i in range(len(x)//2):
        if x[i]!=x[-(i+1)]:
            return False
    return True
l=list(map(int,f)) #создаем список, в который перенесли числа из документа
k=0 #количество четверок
sum=100**100 #минимальная сумма чисел четверки
max_del11=0 #максимальное число, которое делится на 11 без остатка
for i in l:
    if i%11==0:
        max_del11=max(max_del11,i) #находим максимальное число, которое делится на 11 без остатка
for i in range(len(l)-3):
    k_ch = l[i]%2+l[i+1]%2+l[i+2]%2+l[i+3]%2
    if k_ch>2: #проверяем подходит ли количество четных чисел четверки условию 
        continue
    if (pal(l[i])==True or pal(l[i+1])==True or pal(l[i+2])==True or pal(l[i+3])==True) and (l[i]+l[i+1]+l[i+2]+l[i+3])<=max_del11: #проверяем подходит ли найденная четверка условию задачи
        k+=1
        sum=min(sum,l[i]+l[i+1]+l[i+2]+l[i+3])
print(k,sum)
